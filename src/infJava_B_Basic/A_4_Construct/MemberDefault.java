package infJava_B_Basic.A_4_Construct;

// 기본 생성자 - 기본 생성자 있는 참조 클래스

// 생성자를 만들지 않았는데, 생성자를 호출한 적이 있다
// 분명히 매개변수가 없는 다음과 같은 생성자가 필요할 것이다.

// MemberInit() { //생성자 필요
// }

// 기본 생성자
// - 매개변수가 없는 생성자를 기본 생성자라 한다.
// - 클래스에 생성자가 하나도 없으면 자바 컴파일러는 매개변수가 없고, 작동하는 코드가 없는 기본 생성자를 자동으로 만들어준다.
// - 생성자가 하나라도 있으면 자바는 기본 생성자를 만들지 않는다.
// - MemberInit 클래스의 경우 생성자를 만들지 않았으므로 자바가 자동으로 기본 생성자를 만들어준 것이다.

public class MemberDefault {
    String name;

    public MemberDefault(){
        System.out.println("생성자 호출");
    }

    // 클래스가 public 이면 생성자도 같은 접근제어자가 붙음, 생략 가능

    // 호출 부분에 ()만 있고 클래스에 기본생성자도 없으면 자동으로 빈 기본 생성자를 초훌한다.
    // 기본 생성자를 만들고 뭔가를 하게 만들면 기본생성자를 개발자가 만든 것이다.
    // 기본 생성자를 만들면 다른 기본 생성자는 만들어 지지 않는다.
    // 또 매개변수가 있는 생성자를 만들면 기본 생성자는 만들어 지지 않는다.
}

// 기본 생성자를 왜 자동으로 만들어줄까?
// 만약 자바에서 기본 생성자를 만들어주지 않는다면 생성자 기능이 필요하지 않은 경우에도
// 모든 클래스에 개발자가 직접 기본 생성자를 정의해야 한다.
// 생성자 기능을 사용하지 않는 경우도 많기 때문에 이런 편의 기능을 제공한다.

// 정리
// - 생성자는 반드시 호출되어야 한다.
// - 생성자가 없으면 기본 생성자가 제공된다.
// - 생성자가 하나라도 있으면 기본 생성자가 제공되지 않는다. -> MemberConstruct
//   이 경우 개발자가 정의한 생성자를 직접 호출해야 한다

// 생성자가 반드시 있어야 하는 이유: 객체를 메모리에 생성하고 초기화하기 위해서