package infJava_A_Start.A_1_Variable;

// 변수 타입 2
// 다양한 숫자 타입 알기
public class Var8 {
    public static void main(String[] args) {
        // 정수
        byte b = 127; // -128 ~ 127(1byte, 2^8)
        short s = 32767; // -32768 ~ -32767 (2byte, 2^16)
        int i = 2147483647; // -2,147,483,648 ~ 2,147,483,647 (약 20억) (4byte, 2^32)
        long l = 9223372036854775807L; // -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 (메모리 공간 많이 차지함)(8byte, 2^64)

        // 실수
        float f = 10.0f; // f를 붙여주어야함(4byte, 2^32)
        double d = 10.0; // 훨씬 더 큰범위의 숫자 실수를 사용할 수 있음, 정밀도가 더 높다.(8byte, 2^64)

        // 메모리를 작게 사용하면 작은 숫자를 표현할 수 있고, 메모리를 많이 사용하면 큰 숫자를 표현할 수 있다.
        // 변수를 선언하면 표현 범위에 따라 메모리공간을 차지한다.

        // 기타
        // boolean: true, false (1byte)
        // char: 문자 하나 (1byte)
        // String : 문자열을 표현한다. 메모리 사용량은 문자 길이에 따라 동적으로 달라진다.(문자가 길면 길어짐, 문자가 짧으면 짧아짐)
        
        // 정수의 기본 : int, 길어지면 long으로 변경 소문자는 헷갈리니깐 대문자 L를 붙여준다.
        // 실수의 기본 : double, float형은 f를 붙여서 사용함(float는 소수점 계산 오류가 많이 나타나서 권장하지 않음)


        /*
        다음 타입은 실무에서 거의 사용하지 않는다.
        byte :
            표현 길이가 너무 작다. 또 자바는 기본으로 4byte( int )를 효율적으로 계산하도록 설계되어 있다. int
            를 사용하자.
            byte 타입을 직접 선언하고 여기에 숫자 값을 대입해서 계산하는 일은 거의 없다.
            대신에 파일을 바이트 단위로 다루기 때문에 파일 전송, 파일 복사 등에 주로 사용된다.
        short :
            표현 길이가 너무 작다. 또 자바는 기본으로 4byte( int )를 효율적으로 계산하도록 설계되어 있다.
            int 를 사용하자
        float :
            표현 길이와 정밀도가 낮다. 실수형은 double 을 사용하자.
        char :
            문자 하나를 표현하는 일은 거의 없다. 문자 하나를 표현할 때도 문자열을 사용할 수 있다.
            예를 들어 String a = "b" 와 같이 사용하면 된다.참고: 메모리 용량은 매우 저렴하다. 따라서 메모리 용량을 약간 절약하기 보다는 개발 속도나 효율에 초첨을 맞추
            는 것이 더 효과적이다.

        자주 사용하는 타입

        정수 - int , long :
            자바는 정수에 기본으로 int 를 사용한다. 만약 20억이 넘을 것 같으면 long 을 쓰면 된다.
            파일을 다룰 때는 byte 를 사용한다.
        실수 - double :
            실수는 고민하지 말고 double 을 쓰면 된다.
        불린형 - boolean :
            true , false 참 거짓을 표현한다. 이후 조건문에서 자주 사용된다.
        문자열 - String :
            문자를 다룰 때는 문자 하나든 문자열이든 모두 String 을 사용하는 것이 편리하다.

         */





        
    }
}
